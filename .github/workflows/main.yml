name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: pratikmaghade/wisecow:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Kubernetes
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@<EC2_PUBLIC_IP> << 'EOF'
            echo "Deploying to Kubernetes cluster on EC2..."

            # Set up kubectl
            kubectl config set-cluster my-cluster --server=https://<K8S_API_SERVER> --certificate-authority=/path/to/ca.crt
            kubectl config set-credentials my-user --token=$KUBERNETES_TOKEN
            kubectl config set-context my-context --cluster=my-cluster --user=my-user --namespace=default
            kubectl config use-context my-context

            # Apply Kubernetes manifests
            kubectl apply -f /home/ubuntu/wisecow/Deployment.yml
            kubectl apply -f /home/ubuntu/wisecow/Service.yml
            kubectl apply -f /home/ubuntu/wisecow/ingress.yml

            # Rollout restart the deployment
            kubectl rollout restart deployment/wisecow-deployment
          EOF
        env:
          SSH_AUTH_SOCK: /tmp/ssh-XXXXXXJSnRVL/agent.1579
          SSH_AGENT_PID: 1580
          KUBERNETES_TOKEN: ${{ secrets.KUBERNETES_TOKEN }}
